//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class Triangle : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Triangle(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Triangle obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Triangle() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cppdllPINVOKE.delete_Triangle(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public SWIGTYPE_p_int v {
    set {
      cppdllPINVOKE.Triangle_v_set(swigCPtr, SWIGTYPE_p_int.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppdllPINVOKE.Triangle_v_get(swigCPtr);
      SWIGTYPE_p_int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_int(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_double err {
    set {
      cppdllPINVOKE.Triangle_err_set(swigCPtr, SWIGTYPE_p_double.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppdllPINVOKE.Triangle_err_get(swigCPtr);
      SWIGTYPE_p_double ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_double(cPtr, false);
      return ret;
    } 
  }

  public int deleted {
    set {
      cppdllPINVOKE.Triangle_deleted_set(swigCPtr, value);
    } 
    get {
      int ret = cppdllPINVOKE.Triangle_deleted_get(swigCPtr);
      return ret;
    } 
  }

  public int dirty {
    set {
      cppdllPINVOKE.Triangle_dirty_set(swigCPtr, value);
    } 
    get {
      int ret = cppdllPINVOKE.Triangle_dirty_get(swigCPtr);
      return ret;
    } 
  }

  public vec3f n {
    set {
      cppdllPINVOKE.Triangle_n_set(swigCPtr, vec3f.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppdllPINVOKE.Triangle_n_get(swigCPtr);
      vec3f ret = (cPtr == global::System.IntPtr.Zero) ? null : new vec3f(cPtr, false);
      return ret;
    } 
  }

  public Triangle() : this(cppdllPINVOKE.new_Triangle(), true) {
  }

}
