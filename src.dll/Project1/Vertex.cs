//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class Vertex : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Vertex(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Vertex obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Vertex() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cppdllPINVOKE.delete_Vertex(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public vec3f p {
    set {
      cppdllPINVOKE.Vertex_p_set(swigCPtr, vec3f.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppdllPINVOKE.Vertex_p_get(swigCPtr);
      vec3f ret = (cPtr == global::System.IntPtr.Zero) ? null : new vec3f(cPtr, false);
      return ret;
    } 
  }

  public int tstart {
    set {
      cppdllPINVOKE.Vertex_tstart_set(swigCPtr, value);
    } 
    get {
      int ret = cppdllPINVOKE.Vertex_tstart_get(swigCPtr);
      return ret;
    } 
  }

  public int tcount {
    set {
      cppdllPINVOKE.Vertex_tcount_set(swigCPtr, value);
    } 
    get {
      int ret = cppdllPINVOKE.Vertex_tcount_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_SymetricMatrix q {
    set {
      cppdllPINVOKE.Vertex_q_set(swigCPtr, SWIGTYPE_p_SymetricMatrix.getCPtr(value));
      if (cppdllPINVOKE.SWIGPendingException.Pending) throw cppdllPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_SymetricMatrix ret = new SWIGTYPE_p_SymetricMatrix(cppdllPINVOKE.Vertex_q_get(swigCPtr), true);
      if (cppdllPINVOKE.SWIGPendingException.Pending) throw cppdllPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int border {
    set {
      cppdllPINVOKE.Vertex_border_set(swigCPtr, value);
    } 
    get {
      int ret = cppdllPINVOKE.Vertex_border_get(swigCPtr);
      return ret;
    } 
  }

  public Vertex() : this(cppdllPINVOKE.new_Vertex(), true) {
  }

}
